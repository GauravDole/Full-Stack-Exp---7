import React from "react";
import { createRoot } from "react-dom/client";
import { Provider, useSelector, useDispatch } from "react-redux";
import { configureStore, createSlice } from "@reduxjs/toolkit";

// --- Redux Slice ---
const cartSlice = createSlice({
  name: "cart",
  initialState: {
    items: [], // { id, name, price, quantity }
  },
  reducers: {
    addToCart: (state, action) => {
      const existing = state.items.find(i => i.id === action.payload.id);
      if (existing) {
        existing.quantity += 1;
      } else {
        state.items.push({ ...action.payload, quantity: 1 });
      }
    },
    removeFromCart: (state, action) => {
      state.items = state.items.filter(i => i.id !== action.payload);
    },
    updateQuantity: (state, action) => {
      const { id, quantity } = action.payload;
      const item = state.items.find(i => i.id === id);
      if (item && quantity > 0) item.quantity = quantity;
    },
  },
});

const { addToCart, removeFromCart, updateQuantity } = cartSlice.actions;

// --- Store ---
const store = configureStore({
  reducer: {
    cart: cartSlice.reducer,
  },
});

// --- Components ---
const products = [
  { id: 1, name: "Laptop", price: 1200 },
  { id: 2, name: "Phone", price: 800 },
  { id: 3, name: "Headphones", price: 150 },
];

function ProductList() {
  const dispatch = useDispatch();
  return (
    <div>
      <h2>Products</h2>
      {products.map((p) => (
        <div key={p.id} style={{ margin: "10px" }}>
          <strong>{p.name}</strong> â€” ${p.price}
          <button
            style={{ marginLeft: "10px" }}
            onClick={() => dispatch(addToCart(p))}
          >
            Add to Cart
          </button>
        </div>
      ))}
    </div>
  );
}

function Cart() {
  const items = useSelector((state) => state.cart.items);
  const dispatch = useDispatch();

  if (items.length === 0) return <p>Your cart is empty.</p>;

  const total = items.reduce((sum, i) => sum + i.price * i.quantity, 0);

  return (
    <div>
      <h2>Cart</h2>
      {items.map((i) => (
        <div key={i.id} style={{ margin: "10px" }}>
          <strong>{i.name}</strong> â€” ${i.price} Ã—{" "}
          <input
            type="number"
            min="1"
            value={i.quantity}
            style={{ width: "50px", textAlign: "center" }}
            onChange={(e) =>
              dispatch(updateQuantity({ id: i.id, quantity: Number(e.target.value) }))
            }
          />{" "}
          = ${(i.price * i.quantity).toFixed(2)}{" "}
          <button onClick={() => dispatch(removeFromCart(i.id))}>Remove</button>
        </div>
      ))}
      <h3>Total: ${total.toFixed(2)}</h3>
    </div>
  );
}

function App() {
  return (
    <Provider store={store}>
      <div style={{ textAlign: "center", fontFamily: "Arial" }}>
        <h1>ðŸ›’ Redux Toolkit Shopping Cart</h1>
        <div style={{ display: "flex", justifyContent: "space-around", alignItems: "flex-start" }}>
          <ProductList />
          <Cart />
        </div>
      </div>
    </Provider>
  );
}

const root = createRoot(document.getElementById("root"));
root.render(<App />);
